{
  "_from": "exphbs",
  "_id": "exphbs@1.2.0",
  "_inBundle": false,
  "_integrity": "sha512-nDaQAEJcXbdZ2Od68ha8AxZMX0LlYT1O4N6D9/hn0ZN+YkQDI6dSNUMHCBGSNP72EiiCMjVbYwraiInKWJwAlw==",
  "_location": "/exphbs",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "exphbs",
    "fetchSpec": "latest",
    "name": "exphbs",
    "raw": "exphbs",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/exphbs/-/exphbs-1.2.0.tgz",
  "_shasum": "31a853bcfe882f3914aac7b8f6f0dedff924b7d8",
  "_spec": "exphbs",
  "_where": "E:\\mern_stack\\server",
  "bugs": {
    "url": "https://github.com/gnowoel/exphbs/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "glob": "^7.0.0",
    "handlebars": "^4.0.5"
  },
  "deprecated": false,
  "description": "A Handlebars view engine for Express 4.x/3.x, with Node.js and io.js support",
  "devDependencies": {
    "chai": "*",
    "mocha": "*",
    "request": "^2.69.0"
  },
  "homepage": "https://github.com/gnowoel/exphbs#readme",
  "keywords": [
    "express",
    "handlebars",
    "hbs",
    "layouts",
    "partials"
  ],
  "license": "MIT",
  "name": "exphbs",
  "optionalDependencies": {},
  "readme": "# exphbs [![Build Status](https://travis-ci.org/gnowoel/exphbs.svg?branch=master)](https://travis-ci.org/gnowoel/exphbs)\n\nA [Handlebars](https://github.com/wycats/handlebars.js) view engine for [Express](https://github.com/strongloop/express).\n\n<table>\n  <tr>\n    <td></td>\n    <td>Node.js 9.5.0</td>\n    <td>Node.js 8.9.4</td>\n    <td>Node.js 7.10.1</td>\n    <td>Node.js 6.12.3</td>\n    <td>Node.js 5.12.0</td>\n  </tr>\n  <tr>\n    <td>Express 4</td>\n    <td>✓</td>\n    <td>✓</td>\n    <td>✓</td>\n    <td>✓</td>\n    <td>✓</td>\n  </tr>\n  <tr>\n    <td>Express 3</td>\n    <td>✓</td>\n    <td>✓</td>\n    <td>✓</td>\n    <td>✓</td>\n    <td>✓</td> \n  </tr>\n</table>\n\n## Features\n\nLayouts:\n\n  * Declaring layout with a render option or template comment (`{{!< layout}}`)\n  * Nested layouts with arbitrary depth\n\nPartials:\n\n  * Autoloading from defined directory (defaults to `views/partials`)\n  * Namespaced partial names (based on relative paths)\n  * Supports any file extension (defaults to `hbs` and `html`)\n  * Dynamically applying changes during development\n\nHelpers:\n\n  * Autoloading from defined directory (defaults to `views/helpers`)\n\nBlock inheritance:\n\n  * Defining named blocks in layouts then extend them in templates\n\nVariables:\n\n  * Defining `@variables` that can be accessed from any context in a template\n\nPrecompiling:\n\n  * Templates and partials are precompiled and cached in production\n\nInstances:\n\n  * Creating a new instance of separate cache\n  * Instantiating with user-provided Handlebars object\n\n## Getting started\n\nInstallation:\n\n```bash\n$ npm install exphbs\n```\n\nRegistering view engine:\n\n```javascript\napp.engine('hbs', require('exphbs'));\napp.set('view engine', 'hbs');\n```\n\nDefault directory structure:\n\n```\n.\n├── app.js\n└─┬ views/\n  ├── index.hbs\n  ├── helpers/\n  ├── layouts/\n  └── partials/\n```\n\n## Example\n\nCheck out [example](example) directory for a complete example. You can play around with it on [Runnable](http://code.runnable.com/VZi1SrKlnf0d4_ps/expresss-handlebars-example-for-node-js).\n\n## Docs\n\n  * [View engine](docs/engine.md)\n  * [Render options](docs/options.md)\n  * [Variables](docs/variables.md)\n  * [Layouts](docs/layouts.md)\n  * [Partials](docs/partials.md)\n  * [Helpers](docs/helpers.md)\n  * [Block inheritance](docs/blocks.md)\n\n## Tests\n\n```bash\n$ npm install\n$ npm test\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+https://github.com/gnowoel/exphbs.git"
  },
  "scripts": {
    "test": "npm run test4x && npm run test3x",
    "test3x": "npm install express@3.x && mocha && npm uninstall express",
    "test4x": "npm install express@4.x && mocha && npm uninstall express"
  },
  "version": "1.2.0"
}
